[{"C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\App.js":"1","C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\components\\header.js":"3","C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\index.js":"4","C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\components\\Header.js":"5","C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\components\\Pay.js":"6","C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\components\\TokenList.js":"7","C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\utils\\useTokens.js":"8","C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\utils\\fetcher.js":"9","C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\utils\\usePay.js":"10"},{"size":850,"mtime":1612377251884,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1612187817647,"results":"13","hashOfConfig":"12"},{"size":522,"mtime":1612267761016,"results":"14","hashOfConfig":"15"},{"size":543,"mtime":1612270295590,"results":"16","hashOfConfig":"12"},{"size":1541,"mtime":1612593567022,"results":"17","hashOfConfig":"12"},{"size":9917,"mtime":1612728504958,"results":"18","hashOfConfig":"12"},{"size":2788,"mtime":1612638601364,"results":"19","hashOfConfig":"12"},{"size":2949,"mtime":1612637070478,"results":"20","hashOfConfig":"12"},{"size":457,"mtime":1612407021101,"results":"21","hashOfConfig":"12"},{"size":4313,"mtime":1612702805816,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"5zdpaa",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hq9uk9",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"25"},"C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\App.js",[],["46","47"],"C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\components\\header.js",[],"C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\index.js",[],"C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\components\\Header.js",[],"C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\components\\Pay.js",["48","49","50","51","52"],"C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\components\\TokenList.js",[],"C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\utils\\useTokens.js",["53"],"import { useState, useEffect } from \"react\";\r\nimport fetcher from \"./fetcher\";\r\nimport erc20 from \"./abis/@openzeppelin/contracts/token/ERC20/ERC20.sol/ERC20.json\";\r\nimport axios from \"axios\";\r\nimport ethImage from \"../images/eth-symbol.png\";\r\n//Ethersjs stuff\r\nimport { formatUnits } from \"@ethersproject/units\";\r\n//Web3React stuff\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nconst initialTokens = [\r\n  {\r\n    name1: \"Ether\",\r\n    name2: \"ethereum\",\r\n    symbol: \"ETH\",\r\n    address: \"0xnull\",\r\n    logoURI: ethImage,\r\n    decimals: 18,\r\n  },\r\n  {\r\n    name1: \"Wrapped Ether\",\r\n    name2: \"weth\",\r\n    address: \"0xc778417E063141139Fce010982780140Aa0cD5Ab\",\r\n    symbol: \"WETH\",\r\n    decimals: 18,\r\n    chainId: 3,\r\n    logoURI:\r\n      \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\",\r\n  },\r\n  {\r\n    name1: \"Dai Stablecoin\",\r\n    name2: \"dai\",\r\n    address: \"0xaD6D458402F60fD3Bd25163575031ACDce07538D\",\r\n    symbol: \"DAI\",\r\n    decimals: 18,\r\n    chainId: 3,\r\n    logoURI:\r\n      \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png\",\r\n  },\r\n  {\r\n    name1: \"Uniswap\",\r\n    name2: \"uniswap\",\r\n    address: \"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984\",\r\n    symbol: \"UNI\",\r\n    decimals: 18,\r\n    chainId: 3,\r\n    logoURI:\r\n      \"https://cloudflare-ipfs.com/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg/\",\r\n  },\r\n];\r\n\r\nexport default function useTokens() {\r\n  const { active, account, library } = useWeb3React();\r\n  const [price, setPrice] = useState(false);\r\n  let [tokens, setTokens] = useState(initialTokens);\r\n\r\n  useEffect(() => {\r\n    if (!active) return;\r\n    const tokenBalances = tokens.map((token) => {\r\n      if (token.name1 === \"Ether\") {\r\n        return fetcher(library, \"getBalance\", account);\r\n      }\r\n      return fetcher(library, token.address, erc20.abi, \"balanceOf\", account);\r\n    });\r\n\r\n    let newTokens = [];\r\n\r\n    Promise.all(tokenBalances).then((balances) => {\r\n      balances.forEach((balance, index) => {\r\n        newTokens.push({ ...tokens[index], balance: formatUnits(balance, 18) });\r\n      });\r\n      setTokens(newTokens);\r\n    });\r\n  }, [active, library, account]);\r\n\r\n  useEffect(() => {\r\n    if (price) return;\r\n    axios\r\n      .get(\"https://api.coingecko.com/api/v3/simple/price\", {\r\n        params: {\r\n          ids: tokens.map((token) => token.name2).join(\",\"),\r\n          vs_currencies: \"usd\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const prices = res.data;\r\n        const newTokens = [...tokens];\r\n        for (const [tokenName, price] of Object.entries(prices)) {\r\n          const token = newTokens.find((token) => token.name2 === tokenName);\r\n          token.price = price;\r\n        }\r\n        setPrice(true);\r\n        setTokens(newTokens);\r\n      });\r\n  });\r\n  return tokens;\r\n}\r\n","C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\utils\\fetcher.js",[],"C:\\Users\\user\\Desktop\\QuickZap\\web3Interface\\src\\utils\\usePay.js",["54","55","56"],"import { useState, useEffect, useRef } from \"react\";\r\n//mathjs stuff\r\nimport { divide } from \"mathjs\";\r\n//Uniswap stuff\r\nimport {\r\n  ChainId,\r\n  Token,\r\n  WETH,\r\n  Fetcher,\r\n  Trade,\r\n  Route,\r\n  TokenAmount,\r\n  TradeType,\r\n  Percent,\r\n} from \"@uniswap/sdk\";\r\n//Ethersjs stuff\r\nimport { AddressZero } from \"@ethersproject/constants\";\r\n\r\nconst getToken = (token) =>\r\n  new Token(\r\n    token.chainId,\r\n    (token.address =\r\n      token.address === \"0xnull\"\r\n        ? WETH[ChainId.ROPSTEN].address\r\n        : token.address),\r\n    token.decimals,\r\n    token.symbol,\r\n    token.name1\r\n  );\r\n\r\nconst getTrade = async (sendToken, receiveToken, amountIn) => {\r\n  //sending and receiving same token\r\n  if (sendToken === receiveToken) return;\r\n  //eth and weth\r\n  if (sendToken.symbol === \"WETH\" && receiveToken.symbol === \"ETH\")\r\n    return \"WETH\";\r\n  if (sendToken.symbol === \"ETH\" && receiveToken.symbol === \"WETH\")\r\n    return \"ETH\";\r\n\r\n  sendToken = getToken(sendToken);\r\n  receiveToken = getToken(receiveToken);\r\n\r\n  let sendPair, receivePair;\r\n\r\n  if (\r\n    sendToken.address !== WETH[ChainId.ROPSTEN].address &&\r\n    receiveToken.address !== WETH[ChainId.ROPSTEN].address\r\n  ) {\r\n    sendPair = await Fetcher.fetchPairData(sendToken, WETH[ChainId.ROPSTEN]);\r\n    receivePair = await Fetcher.fetchPairData(\r\n      receiveToken,\r\n      WETH[ChainId.ROPSTEN]\r\n    );\r\n  } else {\r\n    sendPair = await Fetcher.fetchPairData(sendToken, receiveToken);\r\n  }\r\n  const path = receivePair ? [sendPair, receivePair] : [sendPair];\r\n  const route = new Route(path, sendToken);\r\n\r\n  const trade = new Trade(\r\n    route,\r\n    new TokenAmount(receiveToken, amountIn),\r\n    TradeType.EXACT_OUTPUT\r\n  );\r\n  console.log(trade.route.path);\r\n  return trade;\r\n};\r\n\r\nlet trades, amountsIn, sendPrices;\r\n\r\nexport default function usePay(tokens, receiveToken, sendToken, payAmount) {\r\n  const [senderTokenAmount, setSenderTokenAmount] = useState(0);\r\n  const [senderTokenValue, setSenderTokenValue] = useState(0);\r\n  const [path, setPath] = useState([]);\r\n\r\n  const bestToken = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!tokens || !tokens[0].price || !tokens[0].balance) return [0, 0];\r\n\r\n    const slippageTolerance = new Percent(\"100\", \"10000\"); // 50 bips, or 0.50%\r\n    const amountIn = parseInt(\r\n      divide(payAmount, receiveToken.price.usd) * 10 ** 18\r\n    );\r\n    const getTrades = (trades) =>\r\n      !trades\r\n        ? tokens.map((token) => getTrade(token, receiveToken, amountIn))\r\n        : trades;\r\n\r\n    trades = getTrades(trades);\r\n    amountsIn = Promise.all(trades).then((trades) => {\r\n      return trades.map((trade) => {\r\n        if (typeof trade === \"string\") {\r\n          return divide(\r\n            payAmount,\r\n            tokens.find((token) => token.symbol === trade).price.usd\r\n          );\r\n        }\r\n        if (!trade) {\r\n          return divide(payAmount, receiveToken.price.usd);\r\n        }\r\n\r\n        return divide(\r\n          parseInt(trade.maximumAmountIn(slippageTolerance).raw.toString()),\r\n          10 ** 18\r\n        );\r\n      });\r\n    });\r\n\r\n    let index;\r\n    amountsIn\r\n      .then((amounts) => {\r\n        amountsIn = amounts;\r\n        sendPrices = amounts.map((amount, index) => {\r\n          return (amount * tokens[index].price.usd).toFixed(2);\r\n        });\r\n      })\r\n      .then(() => {\r\n        if (!sendToken) {\r\n          index = sendPrices.indexOf(Math.min(...sendPrices).toString());\r\n        } else {\r\n          index = tokens.findIndex((token) => {\r\n            return token.address === sendToken.address;\r\n          });\r\n        }\r\n\r\n        bestToken.current = tokens[index];\r\n        setSenderTokenAmount(amountsIn[index]);\r\n        setSenderTokenValue(sendPrices[index]);\r\n        // const newPath = () => {\r\n        //   if (!trades[index]) return [sendToken.address];\r\n        //   else if (trades[index] === \"ETH\") return [AddressZero];\r\n        //   else if (trades[index] === \"WETH\") return [WETH[ChainId.ROPSTEN]];\r\n        //   else {\r\n        //     console.log(trades[index]);\r\n        //     return trades[index].route.path.map((token) => token.address);\r\n        //   }\r\n        // };\r\n        // setPath(newPath);\r\n      });\r\n  }, [payAmount, sendToken, tokens, receiveToken]);\r\n\r\n  return [senderTokenAmount, senderTokenValue, sendToken || bestToken.current];\r\n}\r\n",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":22,"column":10,"nodeType":"63","messageId":"64","endLine":22,"endColumn":21},{"ruleId":"61","severity":1,"message":"65","line":113,"column":10,"nodeType":"63","messageId":"64","endLine":113,"endColumn":14},{"ruleId":"61","severity":1,"message":"66","line":228,"column":9,"nodeType":"63","messageId":"64","endLine":228,"endColumn":19},{"ruleId":"61","severity":1,"message":"67","line":239,"column":9,"nodeType":"63","messageId":"64","endLine":239,"endColumn":24},{"ruleId":"61","severity":1,"message":"68","line":251,"column":9,"nodeType":"63","messageId":"64","endLine":251,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":74,"column":6,"nodeType":"71","endLine":74,"endColumn":32,"suggestions":"72"},{"ruleId":"61","severity":1,"message":"73","line":17,"column":10,"nodeType":"63","messageId":"64","endLine":17,"endColumn":21},{"ruleId":"61","severity":1,"message":"65","line":74,"column":10,"nodeType":"63","messageId":"64","endLine":74,"endColumn":14},{"ruleId":"61","severity":1,"message":"74","line":74,"column":16,"nodeType":"63","messageId":"64","endLine":74,"endColumn":23},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'formatUnits' is defined but never used.","Identifier","unusedVar","'path' is assigned a value but never used.","'approveBtn' is assigned a value but never used.","'approveQuickzap' is assigned a value but never used.","'allowedQuickzap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokens'. Either include it or remove the dependency array.","ArrayExpression",["77"],"'AddressZero' is defined but never used.","'setPath' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [active, library, account, tokens]",{"range":"80","text":"81"},[2271,2297],"[active, library, account, tokens]"]